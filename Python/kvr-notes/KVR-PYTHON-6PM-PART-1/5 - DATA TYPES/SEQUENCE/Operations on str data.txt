			====================================
				Operations on str data
			====================================
=>On str data, we can perform Two Operations. They are

		1. Indexing
		2. Slicing
-------------------------------------------------------------------------------------------------------------------
1. Indexing
-------------------------------------------------------------------------------------------------------------------
=>The process of Obtaining the perticular Character / Value from Str Object by passing 
    Valid Index Value is called INDEXING
=>Syntax:        strobj[Index]
=>Here Index can be Either +Ve and -ve 
=>If the value if Index is Invalid then we get IndexError.
--------------------
Examples
--------------------
>>> s="PYTHON"
>>> s[0]---------------------'P'
>>> print(s[0])-------------P
>>> s[2]--------------------'T'
>>> s[4]---------------------'O'
>>> s[5]----------------------'N'
>>> s[-1]----------------------'N'
>>> s[-6]----------------------'P'
>>> s[-5]----------------------'Y'
>>> s[-2]-----------------------'O'
>>> s[2]------------------------'T'
>>> s[-4]-----------------------'T'
>>> s[10]----------------------IndexError: string index out of range
-------------------------------
>>> S="JAVA PROG"
>>> S[4]----------------    ' '
>>> S[-4]----------------  'P'
>>> S[-1]------------------'G'
>>> S[len(S)]-------------IndexError: string index out of range
>>> S[len(S)-1]--------------'G'
>>> S[-(len(S))]-------------'J'
---------------------------------------------------
>>> s="12345"
>>> s[0]-----------------------------'1'
>>> s[-1]----------------------------'5'
>>> s[-2]---------------------------'4'
>>> s[-5]----------------------------'1'
>>> s[4]----------------------------'5'
>>> s[10-10]----------------------'1'
>>> s[True]-----------------------'2'
>>> s[False]---------------------'1'
>>> s[0b0001]-------------------'2'
>>> s[len(s)]---------------------IndexError: string index out of range
>>> s[-len(s)]------------------- '1'
-------------------------------------------------------------------------------------------------------------------
2. Slicing
-------------------------------------------------------------------------------------------------------------------
=>The Process obtaining range of chars / Values or Sub String from main str object is called SLICING.
=>Slicing  Operation Contains 5 Syntaxes. They are
----------------------------------------------------------------------------------------------------------------------------
Syntax-1:       strobj [ BEGIN INDEX :  END INDEX ]
----------------------------------------------------------------------------------------------------------------------------
=>This Syntax obtains the characters from BEGIN INDEX to END INDEX-1 provided BEGIN INDEX < END INDEX Otherwise we never get any output ( empty str data or space)
-----------------
Examples:
-----------------
>>> s="PYTHON"
>>> print(s)-----------------------PYTHON
>>> s[0:5]------------------------'PYTHO'
>>> s[2:5]-----------------------'THO'
>>> s[3:6]-----------------------'HON'
>>> s[0:3]------------------------'PYT'
>>> s[3:4]------------------------'H'
>>> s[4:2]-----------------------  '   '
>>> print(s[4:2])-----------------  empty str data
-----------------------------------------------------------------
>>> s="PYTHON"
>>> s[-6:-3]---------------------------'PYT'
>>> s[-5:-1]---------------------------'YTHO'
>>> s[-6:-2]--------------------------'PYTH'
>>> s[-1:-6]---------------------------' '
>>> print(s[-1:-6])--------------- Empty String data
-------------------------------------------------------------------
Special case Examples
-----------------------------------------
>>> s="PYTHON"
>>> print(s)---------------PYTHON
>>> s[0:-2]---------------'PYTH'
>>> s[2:-1]--------------'THO'
>>> s[0:-3]-------------'PYT'
>>> s="PYTHON"
>>> print(s)-----------------PYTHON
>>> s[-5:2]-----------------'Y'
>>> s[-6:4]-------------------'PYTH'
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
Syntax-2:     strobj [ BEGIN INDEX :  ]
----------------------------------------------------------------------------------------------------------------------------
=>In This Syntax, we are Specifying BEGIN INDEX and Not Specifying END INDEX.
=>If we don't Specify END INDEX then PVM Takes  the Characters BEGIN INDEX Character to  
    Last Character .

Examples:
-----------------
>>> s="PYTHON"
>>> print(s,type(s))-------------------PYTHON <class 'str'>
>>> s[2:]--------------------------------'THON'
>>> s[0:]--------------------------------'PYTHON'
>>> s[3:]--------------------------------'HON'
>>> s[-3:]-------------------------------'HON'
>>> s[-6:]--------------------------------'PYTHON'
>>> s[-2:]-------------------------------'ON'
>>> s[-4:]-------------------------------'THON'
-----------------------------------------------------------------------------------------------
Syntax-3:  strobj [  :  END INDEX]
----------------------------------------------------------------------------------------------------------------------------
=>In This Syntax, we are Specifying  END INDEX but Not Specifying BEGIN INDEX
=>If we don't Specify BEGIN INDEX then PVM Takes  First  Character to END INDEX-1 
   Characters.

Examples
----------------
>>> s="PYTHON"
>>> print(s,type(s))------------------------PYTHON <class 'str'>
>>> s[:3]--------------------------------------'PYT'
>>> s[:6]--------------------------------------'PYTHON'
>>> s[:4]-----------------------------------'PYTH'
>>> s[:5]-----------------------------------'PYTHO'
>>> s[:-3]---------------------------------'PYT'
>>> s[:-2]--------------------------------'PYTH'
>>> s[:-1]--------------------------------'PYTHO'
>>> s[:-5]-------------------------------'P'
>>> s="PYTHON"
>>> print(s)----------------PYTHON
>>> s[0:6]---------------------'PYTHON'
>>> s[0:]----------------------'PYTHON'
>>> s[:6]------------------------'PYTHON'
----------------------------------------------------------------------------------------------------------------------------
Syntax-4:   strobj[  :   ]
----------------------------------------------------------------------------------------------------------------------------
=>In this Syntax,  we are not both Specifying both BEGIN INDEX and END INDEX 
=>If we don't specify both  BEGIN INDEX and END INDEX then PVM Takes First Character to Last Character.

Examples:
--------------------
>>> s="PYTHON"
>>> print(s)-----------------PYTHON
>>> s[:]----------------------'PYTHON'
>>> s[0:]--------------------'PYTHON'
>>> s[:6]--------------------'PYTHON'
>>> s[-6:]-------------------'PYTHON'

NOTE:  Syntax-1,  Syntax-2,  Syntax-3 and  Syntax-4 are obtaining Range of Charcaters In Forward Direction maintaining Sequnece with Equal Interval value of Value i.e Step Value=1

----------------------------------------------------------------------------------------------------------------------------
Syntax-5:     strobj   [BEGIN INDEX : END INDEX : STEP]
----------------------------------------------------------------------------------------------------------------------------

Rule-1:    Here BEGIN INDEX , END INDEX and STEP values can be either +VE or -VE
----------
Rule-2:     If the Value of STEP is +VE then PVM Takes the Characters  From BEGIN INDEX to	-----------	END INDEX-1  in Forward Direction by maintaining STEP Value provided BEGIN			INDEX < END INDEX otherwise we never get any output ( empty str or space)
-----------
Rule-3 :  If the Value of STEP is -VE then PVM Takes the Characters  From BEGIN INDEX to	-----------	END INDEX+1  in BACKWARD Direction by maintaining STEP Value provided BEGIN			INDEX > END INDEX otherwise we never get any output ( empty str or space)
Rule-4:   In Forward Direction, if we use END INDEX as 0 then we never get any output. 
----------
Rule-5:  In Backward Direction, if we use END INDEX as -1 then we never get any output. 
----------------------------------------------------------------------------------------------------------------------------

Examples:
------------------
>>> s="PYTHON"
>>> print(s)---------------------------PYTHON
>>> s[0:6:1]--------------------------'PYTHON'
>>> s[0:6:2]--------------------------'PTO'
>>> s[0:6:3]-------------------------'PH'
>>> s[2:6:2]-------------------------'TO'
>>> s[::2]-----------------------------'PTO'
>>> s[::1]----------------------------'PYTHON'
>>> s[::]------------------------------'PYTHON'
>>> s[:]-------------------------------'PYTHON'
>>> s[-6:-1:1]-----------------------'PYTHO'
>>> s[-6:-1:2]-----------------------'PTO'
>>> s[-4:-1:3]------------------------'T'
>>> s[-4:-1:2]-----------------------'TO'
---------------------------------------------------
>>> s="PYTHON"
>>> print(s)----------------------PYTHON
>>> s[0:6:1]---------------------'PYTHON'
>>> s[0:6:2]--------------------'PTO'
>>> s[0:6:3]--------------------'PH'
>>> s[2:6:2]--------------------'TO'
>>> s[::2]----------------------'PTO'
>>> s[::1]-----------------------'PYTHON'
>>> s[::]-----------------------'PYTHON'
>>> s[:]--------------------------'PYTHON'
>>> s[-6:-1:1]-----------------'PYTHO'
>>> s[-6:-1:2]-------------------'PTO'
>>> s[-4:-1:3]--------------------'T'
>>> s[-4:-1:2]-------------------'TO'
--------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)------------------------PYTHON
>>> s[5:2:-1]---------------------'NOH'
>>> s[5:1:-1]--------------------'NOHT'
>>> s[::-1]------------------------'NOHTYP'
>>> s[::]-------------------------'PYTHON'
>>> s[::-1]------------------------'NOHTYP'
>>> s[::-2]------------------------'NHY'
>>> s[4::-2]--------------------'OTP'
>>> s[0::2]-----------------------'PTO'
>>> s[0:]--------------------------'PYTHON'
>>> s[0::]------------------------'PYTHON'
>>> s[0::-1]------------------------'P'
>>> s[5:0:-3]----------------------'NT'
>>> s[0:-1:-1]------------------------'  '
>>> s[0:6:-1]-------------------------'   '
>>> s[5:0:-1]-------------------------'NOHTY'
>>> s[::-1]---------------------------'NOHTYP'
>>> k="Java"
>>> k[::-1]----------------------------'avaJ'
----------------------------------
>>> print(s)---------------------PYTHON
>>> s[1:6:1]--------------------'YTHON'
>>> s[1:0:1]---------------------  '   '    (Rule-4)
>>> s[4:0:1]---------------------  '    '   (Rule-4)
>>> s[4:-1:-1]-------------------  '    '  (Rule-5)
>>> s[-6:-1:-1]-------------------   '    ' (Rule-5)
===============================================================
Special Cases
---------------------------
>>> s="LIRIL"
>>> print(s)
LIRIL
>>> s[::-1]
'LIRIL'
>>> s[::]==s[::-1]
True
>>> s="Python"
>>> s[::]==s[::-1]
False
>>> s="MOM"
>>> s[::]==s[::-1]
True
>>> s="DAD"
>>> s[::]==s[::-1]
True
>>> s="MADAM"
>>> s[::]==s[::-1]
True
>>> s="MALAYALAM"
>>> s[::]==s[::-1]
True
>>> s="RACECAR"
>>> s[::]==s[::-1]
True
>>> s="5454545"
>>> s[::]==s[::-1]
True
====================================================================
>>> s="PYTHON"
>>> print(s)
PYTHON
>>> s[0:6]
'PYTHON'
>>> s[0:100]
'PYTHON'
>>> s[-6:-100]
''
>>> s[-400:-6]
''
>>> s[-400:-5]
'P'
>>> s[400:0]
''
>>> s[5:500]
'N'
>>> s[:600:-1]
''
>>> s[600::-1]
'NOHTYP'
-------------------------------------------------------------------------------------------------------------------------


